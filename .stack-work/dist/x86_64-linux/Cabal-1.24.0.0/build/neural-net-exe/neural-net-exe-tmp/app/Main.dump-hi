
==================== FINAL INTERFACE ====================
2016-12-03 04:07:43.855151 UTC

interface main@main:Main 8001
  interface hash: f72e17fa182a2c5c9233cdf9816a8a13
  ABI hash: 89f50bb5589da4815430962da4c34a7e
  export-list hash: 6416fa7ce00459cc6d16d027b8736028
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a67568f74047d1b12ccefb35808866e0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.toDoubleArray
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      neural-net-0.1.0.0@neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  base-4.9.0.0:Text.Read 9c1be14f7e5eac8b18bcb566c5763677
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  neural-net-0.1.0.0@neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C:Lib ab454b9cc966b6ae7803289afe7d2664
import  -/  neural-net-0.1.0.0@neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C:Training 2cf10c3f95e76f91c7a3de06b9e0bd63
import  -/  neural-net-0.1.0.0@neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C:Type f48ab537fd1248e12ff69cf644c6049f
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
233b9f695c44a51738ae4650191546d4
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
bf6624aac33719cc3211bf038b1db4c0
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.main33
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case Training.$wtraining
                           100.0##
                           (GHC.Base.map
                              @ [GHC.Types.Char]
                              @ [GHC.Types.Double]
                              Main.main28
                              (Data.OldList.lines ipv3))
                           Main.main11
                           Main.main3 of ww2 { (#,,#) ww3 ww4 ww5 ->
                    GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.shows9
                      (case ww3 of ww { GHC.Types.D# ww1 ->
                       GHC.Float.$w$sshowSignedFloat
                         GHC.Float.$fShowDouble_$sshowFloat
                         GHC.Show.shows22
                         ww1
                         (GHC.Types.:
                            @ GHC.Types.Char
                            GHC.Show.shows7
                            (GHC.Show.$fShow(,,)_$sgo
                               Main.main2
                               (\ (eta :: GHC.Base.String) ->
                                GHC.Show.showList__ @ Type.Neuron Type.$fShowNeuron1 ww4 eta)
                               (GHC.Types.:
                                  @ GHC.Show.ShowS
                                  (case ww5 of ww7 { Type.Neuron ww8 ww9 ->
                                   Type.$w$cshowsPrec 0# ww8 ww9 })
                                  (GHC.Types.[] @ GHC.Show.ShowS)))) }) })
                   GHC.Types.True
                   ipv2 } }) -}
4d59ca9d414ede0bd32057711b6e3ee5
  main10 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -3.0##) -}
33f051ad954c09d63fb004034d0e087a
  main11 :: [Type.Neuron]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.: @ Type.Neuron Main.main24 Main.main12) -}
82208f415d4b65c8a3a445b7a3e1fa7f
  main12 :: [Type.Neuron]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.: @ Type.Neuron Main.main20 Main.main13) -}
3e48caaa3ccb88ddb128535a74bb4233
  main13 :: [Type.Neuron]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Type.Neuron
                   Main.main14
                   (GHC.Types.[] @ Type.Neuron)) -}
dfc6508d9911ed573c775fd3e75cd1d0
  main14 :: Type.Neuron
  {- HasNoCafRefs,
     Unfolding: (Type.Neuron Main.main16 Main.main15) -}
a4b98525b76d288a702a5e3d2eef8cd0
  main15 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 0.3##) -}
c0bb5ec6d0c7db487ef7efe4e0cb6b31
  main16 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main19
                   Main.main17) -}
80385e251e24fed4be4f9fed662a5332
  main17 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main19
                   Main.main18) -}
e6941c5532820810b676ea383e683fc1
  main18 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main19
                   (GHC.Types.[] @ GHC.Types.Double)) -}
f2783399aeb059a221a0449260f8352d
  main19 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0##) -}
10f41f56040aab55b8e4fc33db91fa74
  main2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
67a2bbcecfd907ea7230a7fb2d014345
  main20 :: Type.Neuron
  {- HasNoCafRefs,
     Unfolding: (Type.Neuron Main.main22 Main.main21) -}
648c4b6ce0a8d4af622ee2fb4d57f8cc
  main21 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 0.5##) -}
36ba1684e328149602195f74908b62fa
  main22 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main23
                   Main.main17) -}
c64c242ddfebe11fbf1eded077d3a6e2
  main23 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -2.0##) -}
071d4b5804c03c27609cc9239a24f077
  main24 :: Type.Neuron
  {- HasNoCafRefs, Unfolding: (Type.Neuron Main.main25 Main.main4) -}
c25c1d92c9f6038d28488d1dc7230d71
  main25 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main23
                   Main.main26) -}
47c0b8302e7347c9e1bc0f3500ac8172
  main26 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main27
                   Main.main18) -}
c44fd98cf76cca6b23b1b69554721335
  main27 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 3.0##) -}
ba7871184a5a95a8e3d4e6fd67f3b881
  main28 :: GHC.Base.String -> [GHC.Types.Double]
  {- Arity: 1,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 Data.OldList.wordsFB
                   @ [GHC.Types.Double]
                   Main.main29
                   (GHC.Types.[] @ GHC.Types.Double)
                   x) -}
014ef577612b9f2cc99c468795c84cb6
  main29 ::
    [GHC.Types.Char] -> [GHC.Types.Double] -> [GHC.Types.Double]
  {- Arity: 2,
     Unfolding: (\ (x :: [GHC.Types.Char])
                   (ys :: [GHC.Types.Double])[OneShot] ->
                 GHC.Types.: @ GHC.Types.Double (Main.main_toDouble x) ys) -}
c15866932fdb83f04d906bd4ebcf7242
  main3 :: Type.Neuron
  {- HasNoCafRefs, Unfolding: (Type.Neuron Main.main5 Main.main4) -}
19dbb2c11909edb0e26c094e74f8e798
  main30 :: GHC.Types.Double
  {- Strictness: x -}
607fc507ea7e231a4f062c72f36859b4
  main31 :: GHC.Types.Double
  {- Strictness: x -}
b7f69d1d4b2d34262958985344ee8496
  main32 :: Text.ParserCombinators.ReadP.P GHC.Types.Double
  {- Unfolding: ((GHC.Read.$fReadDouble9
                    GHC.Read.$fReadDouble_$sconvertFrac
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <GHC.Types.Double>_R)
                   @ GHC.Types.Double
                   (Text.Read.readEither5 @ GHC.Types.Double)) -}
3a7a558070820c96b05db58399660d1a
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "input/majority.txt"#) -}
4b4e087c439d6156cfe9ae5a31f77cc6
  main34 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
baeb3b62fc600c92ac9f014c156066d1
  main4 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# -1.0##) -}
4426c7be48aaf89b0b10633e4f1ab8a9
  main5 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main10
                   Main.main6) -}
2cf7aad96eced9065f8fbb72cbe00a6d
  main6 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main9
                   Main.main7) -}
6269e75fbd370086880e4b14c2daa9eb
  main7 :: [GHC.Types.Double]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main8
                   (GHC.Types.[] @ GHC.Types.Double)) -}
3bff3249c7fb3dd1a44a0789dafa0c85
  main8 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 5.0##) -}
f7de961640d7db25fe23c8bb685a03e2
  main9 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 4.0##) -}
8961debb86681543c7684f39f3a39bff
  main_toDouble :: GHC.Base.String -> GHC.Types.Double
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither6
                        @ GHC.Types.Double
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Double
                           Main.main32
                           s) of wild {
                   [] -> Main.main31
                   : x ds
                   -> case ds of wild1 { [] -> x : ipv ipv1 -> Main.main30 } }) -}
38d6b2c02fb127de5de8a965f4dc1075
  toDoubleArray :: [GHC.Base.String] -> [GHC.Types.Double]
  {- Arity: 1,
     Unfolding: (GHC.Base.map
                   @ GHC.Base.String
                   @ GHC.Types.Double
                   Main.main_toDouble) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

