
==================== FINAL INTERFACE ====================
2016-12-03 04:16:58.60503 UTC

interface neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C:NeuralNetStep 8001
  interface hash: af0d1283fc06e838d19d520f390a25bf
  ABI hash: 36dff347375d689f91ccd6b9c57cfdd1
  export-list hash: bb34cc3aed4277d06cb1cb6e9c53d141
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  NeuralNetStep.forward
  NeuralNetStep.hidden
  NeuralNetStep.neuralNet
  NeuralNetStep.step
module dependencies: Type
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  Type f48ab537fd1248e12ff69cf644c6049f
  exports: 1faf231b01dbc5294c5ce26a23f6b145
  Input 602440102f78d29de4ed0f56b5b88ec2
  Neuron d88d3f9b9224584cd291cf631eb06f6a
  Neuron 97d1d92718a71249f87e582753e38144
f7abf0dfced978581aca9e0afb37e8a5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   NeuralNetStep.$trModule2
                   NeuralNetStep.$trModule1) -}
5550352f7e1b641d6e767de2761f63fb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NeuralNetStep"#) -}
a878a602ff5aff4a21d447ecdf6d3f10
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "neural-net-0.1.0.0-SYgV3Sx5uw5ZT4aENrU9C"#) -}
b284c24bac3d56587248df2fa2047b4f
  $wgo ::
    [GHC.Types.Double]
    -> [GHC.Types.Double] -> GHC.Prim.Double# -> GHC.Prim.Double#
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,U>,
     Inline: [0] -}
c81c5e63c13575a1ae3c235172af8248
  forward :: Type.Input -> Type.Neuron -> GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U><S(LS(S)),1*U(1*U,1*U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Type.Input) (w1 :: Type.Neuron) ->
                 case w1 of ww { Type.Neuron ww1 ww2 ->
                 case ww2 of ww3 { GHC.Types.D# ww4 ->
                 case NeuralNetStep.$wgo w ww1 0.0## of ww5 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=## (GHC.Prim.-## ww5 ww4) 0.0##) of wild {
                   GHC.Types.False -> GHC.Types.D# 0.0##
                   GHC.Types.True -> GHC.Types.D# 1.0## } } } }) -}
4cdbee9bc4a25ee0d2f52457f3738b03
  hidden :: Type.Input -> [Type.Neuron] -> [GHC.Types.Double]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (input :: Type.Input) (eta :: [Type.Neuron]) ->
                 GHC.Base.build
                   @ GHC.Types.Double
                   (\ @ b1
                      (c :: GHC.Types.Double -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ Type.Neuron
                      @ b1
                      (GHC.Base.mapFB
                         @ GHC.Types.Double
                         @ b1
                         @ Type.Neuron
                         c
                         (NeuralNetStep.forward input))
                      n
                      eta)) -}
98b14a54aefe331aef11c81434741614
  neuralNet ::
    [Type.Input] -> [Type.Neuron] -> Type.Neuron -> [GHC.Types.Double]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U(U,U(U))>,
     Unfolding: InlineRule (3, True, False)
                (\ (inputs :: [Type.Input])
                   (hiddenN :: [Type.Neuron])
                   (outN :: Type.Neuron) ->
                 GHC.Base.build
                   @ GHC.Types.Double
                   (\ @ b1
                      (c :: GHC.Types.Double -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Double]
                      @ b1
                      (GHC.Base.mapFB
                         @ GHC.Types.Double
                         @ b1
                         @ [GHC.Types.Double]
                         c
                         (\ (x :: [GHC.Types.Double]) ->
                          NeuralNetStep.forward (NeuralNetStep.hidden x hiddenN) outN))
                      n
                      inputs)) -}
e0af71b011b0f68048de1f3fd6c36aca
  step :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (u :: GHC.Types.Double) ->
                 case u of wild { GHC.Types.D# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=## x 0.0##) of wild1 {
                   GHC.Types.False -> NeuralNetStep.step2
                   GHC.Types.True -> NeuralNetStep.step1 } }) -}
c6a2574f52520a862c7122196b3a2699
  step1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0##) -}
48571ba68feb3c9fad2132f08d325fa4
  step2 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

